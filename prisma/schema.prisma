generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String?
  profileImage String?
  phone        String
  bio          String?
  role         Role
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isDeleted    Boolean  @default(false)

  donorDetails  DonorDetail[]
  bloodRequests BloodRequest[] @relation("UserRequests")

  @@map("users")
}

model Admin {
  id           String   @id @default(uuid())
  name         String?
  profileImage String?
  bio          String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isDeleted    Boolean  @default(false)

  @@map("admins")
}

model DonorDetail {
  id               String    @id @default(uuid())
  userId           String
  user             User      @relation(fields: [userId], references: [id])
  bloodType        BloodType
  location         String
  lastDonationDate DateTime  @default(now())

  @@map("donorDetail")
}

model BloodRequest {
  id          String    @id @default(uuid())
  requesterId String
  requester   User      @relation("UserRequests", fields: [requesterId], references: [id])
  bloodType   BloodType
  location    String
  urgency     Status
  status      Status
  createdAt   DateTime  @default(now())

  @@map("bloodRequest")
}

model Event {
  id        String   @id @default(uuid())
  title     String
  date      DateTime
  location  String
  organizer String
  createdAt DateTime @default(now())

  @@map("event")
}

enum Role {
  DONOR
  RECIPIENT
  ADMIN
}

enum Status {
  PENDING
  APPROVED
  FULFILLED
}

enum BloodType {
  O_POS
  O_NEG
  A_POS
  A_NEG
  AB_POS
  AB_NEG
  B_POS
  B_NEG
}
